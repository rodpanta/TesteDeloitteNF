//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DeloitteNF.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DeloitteNFEntities : DbContext
    {
        public DeloitteNFEntities()
            : base("name=DeloitteNFEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Clientes> Clientes { get; set; }
        public virtual DbSet<Fornecedores> Fornecedores { get; set; }
        public virtual DbSet<ItensNotasFiscais> ItensNotasFiscais { get; set; }
        public virtual DbSet<NotasFiscais> NotasFiscais { get; set; }
        public virtual DbSet<Produtos> Produtos { get; set; }
    
        public virtual ObjectResult<ClientsList_Result> ClientsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientsList_Result>("ClientsList");
        }
    
        public virtual ObjectResult<InvoiceList_Result> InvoiceList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InvoiceList_Result>("InvoiceList");
        }
    
        public virtual ObjectResult<ProductsList_Result> ProductsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductsList_Result>("ProductsList");
        }
    
        public virtual ObjectResult<ProviderList_Result> ProviderList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProviderList_Result>("ProviderList");
        }
    
        public virtual ObjectResult<Clientes> stp_ClientesList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Clientes>("stp_ClientesList");
        }
    
        public virtual ObjectResult<Clientes> stp_ClientesList(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Clientes>("stp_ClientesList", mergeOption);
        }
    
        public virtual ObjectResult<stp_ProviderSPList_Result> stp_ProviderSPList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_ProviderSPList_Result>("stp_ProviderSPList");
        }
    
        public virtual ObjectResult<stp_ClientesResList_Result> stp_ClientesResList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_ClientesResList_Result>("stp_ClientesResList");
        }
    
        public virtual ObjectResult<InvoiceId_Result> InvoiceId(Nullable<int> notaFiscalid)
        {
            var notaFiscalidParameter = notaFiscalid.HasValue ?
                new ObjectParameter("NotaFiscalid", notaFiscalid) :
                new ObjectParameter("NotaFiscalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InvoiceId_Result>("InvoiceId", notaFiscalidParameter);
        }
    
        public virtual ObjectResult<InvoiceItemList_Result> InvoiceItemList(Nullable<int> notaFiscalid)
        {
            var notaFiscalidParameter = notaFiscalid.HasValue ?
                new ObjectParameter("NotaFiscalid", notaFiscalid) :
                new ObjectParameter("NotaFiscalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InvoiceItemList_Result>("InvoiceItemList", notaFiscalidParameter);
        }
    
        public virtual int InvoiceItemsInsert(Nullable<int> notaFiscalid, Nullable<int> produtoid, Nullable<int> quantidade, Nullable<decimal> preco)
        {
            var notaFiscalidParameter = notaFiscalid.HasValue ?
                new ObjectParameter("NotaFiscalid", notaFiscalid) :
                new ObjectParameter("NotaFiscalid", typeof(int));
    
            var produtoidParameter = produtoid.HasValue ?
                new ObjectParameter("Produtoid", produtoid) :
                new ObjectParameter("Produtoid", typeof(int));
    
            var quantidadeParameter = quantidade.HasValue ?
                new ObjectParameter("Quantidade", quantidade) :
                new ObjectParameter("Quantidade", typeof(int));
    
            var precoParameter = preco.HasValue ?
                new ObjectParameter("Preco", preco) :
                new ObjectParameter("Preco", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InvoiceItemsInsert", notaFiscalidParameter, produtoidParameter, quantidadeParameter, precoParameter);
        }
    
        public virtual ObjectResult<stp_InvoiceInsertRes_Result> stp_InvoiceInsert(Nullable<int> clienteid)
        {
            var clienteidParameter = clienteid.HasValue ?
                new ObjectParameter("Clienteid", clienteid) :
                new ObjectParameter("Clienteid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_InvoiceInsertRes_Result>("stp_InvoiceInsert", clienteidParameter);
        }
    
        public virtual ObjectResult<stp_InvoiceID_Result> stp_InvoiceID(Nullable<int> notaFiscalid)
        {
            var notaFiscalidParameter = notaFiscalid.HasValue ?
                new ObjectParameter("NotaFiscalid", notaFiscalid) :
                new ObjectParameter("NotaFiscalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_InvoiceID_Result>("stp_InvoiceID", notaFiscalidParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ClientsInsert(string nome, string endereco, string tipo)
        {
            var nomeParameter = nome != null ?
                new ObjectParameter("Nome", nome) :
                new ObjectParameter("Nome", typeof(string));
    
            var enderecoParameter = endereco != null ?
                new ObjectParameter("Endereco", endereco) :
                new ObjectParameter("Endereco", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ClientsInsert", nomeParameter, enderecoParameter, tipoParameter);
        }
    
        public virtual ObjectResult<stp_ClientsInsert_Result> stp_ClientsInsert(string nome, string endereco, string tipo)
        {
            var nomeParameter = nome != null ?
                new ObjectParameter("Nome", nome) :
                new ObjectParameter("Nome", typeof(string));
    
            var enderecoParameter = endereco != null ?
                new ObjectParameter("Endereco", endereco) :
                new ObjectParameter("Endereco", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_ClientsInsert_Result>("stp_ClientsInsert", nomeParameter, enderecoParameter, tipoParameter);
        }
    
        public virtual ObjectResult<ClientsId_Result> ClientsId(Nullable<int> clienteid)
        {
            var clienteidParameter = clienteid.HasValue ?
                new ObjectParameter("Clienteid", clienteid) :
                new ObjectParameter("Clienteid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ClientsId_Result>("ClientsId", clienteidParameter);
        }
    
        public virtual ObjectResult<stp_ClientsId_Result> stp_ClientsId(Nullable<int> clienteid)
        {
            var clienteidParameter = clienteid.HasValue ?
                new ObjectParameter("Clienteid", clienteid) :
                new ObjectParameter("Clienteid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_ClientsId_Result>("stp_ClientsId", clienteidParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ClientsUpdate(Nullable<int> clienteId, string nome, string endereco, string tipo)
        {
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("Nome", nome) :
                new ObjectParameter("Nome", typeof(string));
    
            var enderecoParameter = endereco != null ?
                new ObjectParameter("Endereco", endereco) :
                new ObjectParameter("Endereco", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ClientsUpdate", clienteIdParameter, nomeParameter, enderecoParameter, tipoParameter);
        }
    
        public virtual ObjectResult<stp_ClientsUpdate_Result> stp_ClientsUpdate(Nullable<int> clienteId, string nome, string endereco, string tipo)
        {
            var clienteIdParameter = clienteId.HasValue ?
                new ObjectParameter("ClienteId", clienteId) :
                new ObjectParameter("ClienteId", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("Nome", nome) :
                new ObjectParameter("Nome", typeof(string));
    
            var enderecoParameter = endereco != null ?
                new ObjectParameter("Endereco", endereco) :
                new ObjectParameter("Endereco", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_ClientsUpdate_Result>("stp_ClientsUpdate", clienteIdParameter, nomeParameter, enderecoParameter, tipoParameter);
        }
    
        public virtual int ClientsDelete(Nullable<int> clienteid)
        {
            var clienteidParameter = clienteid.HasValue ?
                new ObjectParameter("Clienteid", clienteid) :
                new ObjectParameter("Clienteid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ClientsDelete", clienteidParameter);
        }
    
        public virtual int stp_ClientsDelete(Nullable<int> clienteid)
        {
            var clienteidParameter = clienteid.HasValue ?
                new ObjectParameter("Clienteid", clienteid) :
                new ObjectParameter("Clienteid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_ClientsDelete", clienteidParameter);
        }
    
        public virtual ObjectResult<stp_BestCostumers_Result> stp_BestCostumers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_BestCostumers_Result>("stp_BestCostumers");
        }
    
        public virtual ObjectResult<InvoiceListBestCustomers_Result> InvoiceListBestCustomers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InvoiceListBestCustomers_Result>("InvoiceListBestCustomers");
        }
    
        public virtual ObjectResult<stp_BestCustomers_Result> stp_BestCustomers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_BestCustomers_Result>("stp_BestCustomers");
        }
    
        public virtual int ProvidersDelete(Nullable<int> fornecedorid)
        {
            var fornecedoridParameter = fornecedorid.HasValue ?
                new ObjectParameter("Fornecedorid", fornecedorid) :
                new ObjectParameter("Fornecedorid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ProvidersDelete", fornecedoridParameter);
        }
    
        public virtual ObjectResult<ProvidersId_Result> ProvidersId(Nullable<int> fornecedorid)
        {
            var fornecedoridParameter = fornecedorid.HasValue ?
                new ObjectParameter("Fornecedorid", fornecedorid) :
                new ObjectParameter("Fornecedorid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProvidersId_Result>("ProvidersId", fornecedoridParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ProvidersInsert(string nome)
        {
            var nomeParameter = nome != null ?
                new ObjectParameter("Nome", nome) :
                new ObjectParameter("Nome", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ProvidersInsert", nomeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ProvidersUpdate(Nullable<int> fornecedorId, string nome)
        {
            var fornecedorIdParameter = fornecedorId.HasValue ?
                new ObjectParameter("FornecedorId", fornecedorId) :
                new ObjectParameter("FornecedorId", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("Nome", nome) :
                new ObjectParameter("Nome", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ProvidersUpdate", fornecedorIdParameter, nomeParameter);
        }
    
        public virtual ObjectResult<stp_ProvidersInsert_Result> stp_ProvidersInsert(string nome)
        {
            var nomeParameter = nome != null ?
                new ObjectParameter("Nome", nome) :
                new ObjectParameter("Nome", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_ProvidersInsert_Result>("stp_ProvidersInsert", nomeParameter);
        }
    
        public virtual ObjectResult<stp_ProvidersId_Result> stp_ProvidersId(Nullable<int> fornecedorid)
        {
            var fornecedoridParameter = fornecedorid.HasValue ?
                new ObjectParameter("Fornecedorid", fornecedorid) :
                new ObjectParameter("Fornecedorid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_ProvidersId_Result>("stp_ProvidersId", fornecedoridParameter);
        }
    
        public virtual ObjectResult<stp_ProvidersUpdate_Result> stp_ProvidersUpdate(Nullable<int> fornecedorId, string nome)
        {
            var fornecedorIdParameter = fornecedorId.HasValue ?
                new ObjectParameter("FornecedorId", fornecedorId) :
                new ObjectParameter("FornecedorId", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("Nome", nome) :
                new ObjectParameter("Nome", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_ProvidersUpdate_Result>("stp_ProvidersUpdate", fornecedorIdParameter, nomeParameter);
        }
    
        public virtual int stp_ProvidersDelete(Nullable<int> fornecedorid)
        {
            var fornecedoridParameter = fornecedorid.HasValue ?
                new ObjectParameter("Fornecedorid", fornecedorid) :
                new ObjectParameter("Fornecedorid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_ProvidersDelete", fornecedoridParameter);
        }
    
        public virtual ObjectResult<stp_ProductsList_Result> stp_ProductsList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_ProductsList_Result>("stp_ProductsList");
        }
    
        public virtual ObjectResult<ProductsId_Result> ProductsId(Nullable<int> produtoid)
        {
            var produtoidParameter = produtoid.HasValue ?
                new ObjectParameter("Produtoid", produtoid) :
                new ObjectParameter("Produtoid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ProductsId_Result>("ProductsId", produtoidParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ProductsInsert(string nome, string unidade, Nullable<decimal> preco, Nullable<int> fornecedorid)
        {
            var nomeParameter = nome != null ?
                new ObjectParameter("Nome", nome) :
                new ObjectParameter("Nome", typeof(string));
    
            var unidadeParameter = unidade != null ?
                new ObjectParameter("Unidade", unidade) :
                new ObjectParameter("Unidade", typeof(string));
    
            var precoParameter = preco.HasValue ?
                new ObjectParameter("Preco", preco) :
                new ObjectParameter("Preco", typeof(decimal));
    
            var fornecedoridParameter = fornecedorid.HasValue ?
                new ObjectParameter("Fornecedorid", fornecedorid) :
                new ObjectParameter("Fornecedorid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ProductsInsert", nomeParameter, unidadeParameter, precoParameter, fornecedoridParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> ProductsUpdate(Nullable<int> produtoid, string nome, string unidade, Nullable<decimal> preco, Nullable<int> fornecedorid)
        {
            var produtoidParameter = produtoid.HasValue ?
                new ObjectParameter("Produtoid", produtoid) :
                new ObjectParameter("Produtoid", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("Nome", nome) :
                new ObjectParameter("Nome", typeof(string));
    
            var unidadeParameter = unidade != null ?
                new ObjectParameter("Unidade", unidade) :
                new ObjectParameter("Unidade", typeof(string));
    
            var precoParameter = preco.HasValue ?
                new ObjectParameter("Preco", preco) :
                new ObjectParameter("Preco", typeof(decimal));
    
            var fornecedoridParameter = fornecedorid.HasValue ?
                new ObjectParameter("Fornecedorid", fornecedorid) :
                new ObjectParameter("Fornecedorid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("ProductsUpdate", produtoidParameter, nomeParameter, unidadeParameter, precoParameter, fornecedoridParameter);
        }
    
        public virtual ObjectResult<stpProductsId_Result> stpProductsId(Nullable<int> produtoid)
        {
            var produtoidParameter = produtoid.HasValue ?
                new ObjectParameter("Produtoid", produtoid) :
                new ObjectParameter("Produtoid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stpProductsId_Result>("stpProductsId", produtoidParameter);
        }
    
        public virtual ObjectResult<stp_ProductsUpdate_Result> stp_ProductsUpdate(Nullable<int> produtoid, string nome, string unidade, Nullable<decimal> preco, Nullable<int> fornecedorid)
        {
            var produtoidParameter = produtoid.HasValue ?
                new ObjectParameter("Produtoid", produtoid) :
                new ObjectParameter("Produtoid", typeof(int));
    
            var nomeParameter = nome != null ?
                new ObjectParameter("Nome", nome) :
                new ObjectParameter("Nome", typeof(string));
    
            var unidadeParameter = unidade != null ?
                new ObjectParameter("Unidade", unidade) :
                new ObjectParameter("Unidade", typeof(string));
    
            var precoParameter = preco.HasValue ?
                new ObjectParameter("Preco", preco) :
                new ObjectParameter("Preco", typeof(decimal));
    
            var fornecedoridParameter = fornecedorid.HasValue ?
                new ObjectParameter("Fornecedorid", fornecedorid) :
                new ObjectParameter("Fornecedorid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_ProductsUpdate_Result>("stp_ProductsUpdate", produtoidParameter, nomeParameter, unidadeParameter, precoParameter, fornecedoridParameter);
        }
    
        public virtual ObjectResult<stp_ProductsInsert_Result> stp_ProductsInsert(string nome, string unidade, Nullable<decimal> preco, Nullable<int> fornecedorid)
        {
            var nomeParameter = nome != null ?
                new ObjectParameter("Nome", nome) :
                new ObjectParameter("Nome", typeof(string));
    
            var unidadeParameter = unidade != null ?
                new ObjectParameter("Unidade", unidade) :
                new ObjectParameter("Unidade", typeof(string));
    
            var precoParameter = preco.HasValue ?
                new ObjectParameter("Preco", preco) :
                new ObjectParameter("Preco", typeof(decimal));
    
            var fornecedoridParameter = fornecedorid.HasValue ?
                new ObjectParameter("Fornecedorid", fornecedorid) :
                new ObjectParameter("Fornecedorid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_ProductsInsert_Result>("stp_ProductsInsert", nomeParameter, unidadeParameter, precoParameter, fornecedoridParameter);
        }
    
        public virtual int stp_ProductsDelete(Nullable<int> productid)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("Productid", productid) :
                new ObjectParameter("Productid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_ProductsDelete", productidParameter);
        }
    
        public virtual int stp_STPProductsDelete(Nullable<int> productid)
        {
            var productidParameter = productid.HasValue ?
                new ObjectParameter("Productid", productid) :
                new ObjectParameter("Productid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_STPProductsDelete", productidParameter);
        }
    
        public virtual ObjectResult<stp_InvoiceList_Result> stp_InvoiceList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_InvoiceList_Result>("stp_InvoiceList");
        }
    
        public virtual int stp_InvoiceItemsInsert(Nullable<int> notaFiscalid, Nullable<int> produtoid, Nullable<int> quantidade, Nullable<decimal> preco)
        {
            var notaFiscalidParameter = notaFiscalid.HasValue ?
                new ObjectParameter("NotaFiscalid", notaFiscalid) :
                new ObjectParameter("NotaFiscalid", typeof(int));
    
            var produtoidParameter = produtoid.HasValue ?
                new ObjectParameter("Produtoid", produtoid) :
                new ObjectParameter("Produtoid", typeof(int));
    
            var quantidadeParameter = quantidade.HasValue ?
                new ObjectParameter("Quantidade", quantidade) :
                new ObjectParameter("Quantidade", typeof(int));
    
            var precoParameter = preco.HasValue ?
                new ObjectParameter("Preco", preco) :
                new ObjectParameter("Preco", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_InvoiceItemsInsert", notaFiscalidParameter, produtoidParameter, quantidadeParameter, precoParameter);
        }
    
        public virtual ObjectResult<stp_InvoiceItemList_Result> stp_InvoiceItemList(Nullable<int> notaFiscalid)
        {
            var notaFiscalidParameter = notaFiscalid.HasValue ?
                new ObjectParameter("NotaFiscalid", notaFiscalid) :
                new ObjectParameter("NotaFiscalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_InvoiceItemList_Result>("stp_InvoiceItemList", notaFiscalidParameter);
        }
    
        public virtual int InvoiceDelete(Nullable<int> notaFiscalid)
        {
            var notaFiscalidParameter = notaFiscalid.HasValue ?
                new ObjectParameter("NotaFiscalid", notaFiscalid) :
                new ObjectParameter("NotaFiscalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InvoiceDelete", notaFiscalidParameter);
        }
    
        public virtual int stp_InvoiceDelete(Nullable<int> notaFiscalid)
        {
            var notaFiscalidParameter = notaFiscalid.HasValue ?
                new ObjectParameter("NotaFiscalid", notaFiscalid) :
                new ObjectParameter("NotaFiscalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_InvoiceDelete", notaFiscalidParameter);
        }
    
        public virtual int InvoiceEmitir(Nullable<int> notaFiscalid)
        {
            var notaFiscalidParameter = notaFiscalid.HasValue ?
                new ObjectParameter("NotaFiscalid", notaFiscalid) :
                new ObjectParameter("NotaFiscalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InvoiceEmitir", notaFiscalidParameter);
        }
    
        public virtual int stp_InvoiceEmitir(Nullable<int> notaFiscalid)
        {
            var notaFiscalidParameter = notaFiscalid.HasValue ?
                new ObjectParameter("NotaFiscalid", notaFiscalid) :
                new ObjectParameter("NotaFiscalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_InvoiceEmitir", notaFiscalidParameter);
        }
    
        public virtual int InvoiceItemsDelete(Nullable<int> itemNotaFiscalid)
        {
            var itemNotaFiscalidParameter = itemNotaFiscalid.HasValue ?
                new ObjectParameter("ItemNotaFiscalid", itemNotaFiscalid) :
                new ObjectParameter("ItemNotaFiscalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InvoiceItemsDelete", itemNotaFiscalidParameter);
        }
    
        public virtual int stp_InvoiceItemsDelete(Nullable<int> itemNotaFiscalid)
        {
            var itemNotaFiscalidParameter = itemNotaFiscalid.HasValue ?
                new ObjectParameter("ItemNotaFiscalid", itemNotaFiscalid) :
                new ObjectParameter("ItemNotaFiscalid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("stp_InvoiceItemsDelete", itemNotaFiscalidParameter);
        }
    
        public virtual ObjectResult<InvoiceListProductsSales_Result> InvoiceListProductsSales()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InvoiceListProductsSales_Result>("InvoiceListProductsSales");
        }
    
        public virtual ObjectResult<stp_InvoiceListProductsSales_Result> stp_InvoiceListProductsSales()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<stp_InvoiceListProductsSales_Result>("stp_InvoiceListProductsSales");
        }
    }
}
